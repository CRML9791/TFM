{
	"name": "MetadataDrivenCopyTask_c3b_BottomLevel",
	"properties": {
		"description": "This pipeline will copy objects from one group. The objects belonging to this group will be copied parallelly.",
		"activities": [
			{
				"name": "ListObjectsFromOneGroup",
				"description": "List objects from one group and iterate each of them to downstream activities",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.ObjectsPerGroupToCopy",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "RouteJobsBasedOnLoadingBehavior",
							"description": "Check the loading behavior for each object if it requires full load or incremental load. If it is Default or FullLoad case, do full load. If it is DeltaLoad case, do incremental load via watermark column to identify changes.",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@json(item().DataLoadingBehaviorSettings).dataLoadingBehavior",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "FullLoad",
										"activities": [
											{
												"name": "FullLoadOneObject",
												"description": "Take a full snapshot on this object and copy it to the destination",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{json(item().SourceObjectSettings).entityName}"
													},
													{
														"name": "Destination",
														"value": "@{json(item().SinkObjectSettings).container}/@{json(item().SinkObjectSettings).folderPath}/@{json(item().SinkObjectSettings).fileName}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "CommonDataServiceForAppsSource",
														"query": {
															"value": "@json(item().CopySourceSettings).query",
															"type": "Expression"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"validateDataConsistency": false,
													"translator": {
														"value": "@json(item().CopyActivitySettings).translator",
														"type": "Expression"
													}
												},
												"inputs": [
													{
														"referenceName": "MetadataDrivenCopyTask_c3b_SourceDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_entityName": {
																"value": "@json(item().SourceObjectSettings).entityName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "MetadataDrivenCopyTask_c3b_DestinationDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_fileName": {
																"value": "@json(item().SinkObjectSettings).fileName",
																"type": "Expression"
															},
															"cw_folderPath": {
																"value": "@json(item().SinkObjectSettings).folderPath",
																"type": "Expression"
															},
															"cw_container": {
																"value": "@json(item().SinkObjectSettings).container",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "DeltaLoad",
										"activities": [
											{
												"name": "GetMaxWatermarkValue",
												"description": "Query the source object to get the max value from watermark column",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "CommonDataServiceForAppsSource",
														"query": {
															"value": "select max(@{json(item().DataLoadingBehaviorSettings).watermarkColumnName}) as CurrentMaxWaterMarkColumnValue from @{json(item().SourceObjectSettings).entityName}",
															"type": "Expression"
														}
													},
													"dataset": {
														"referenceName": "MetadataDrivenCopyTask_c3b_SourceDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_entityName": {
																"value": "@json(item().SourceObjectSettings).entityName",
																"type": "Expression"
															}
														}
													}
												}
											},
											{
												"name": "SetWatermarkValueQuoteChar",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "GetMaxWatermarkValue",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "WatermarkValueQuoteChar",
													"value": {
														"value": "@if(contains(json(item().DataLoadingBehaviorSettings).watermarkColumnType, 'Int'), '','''')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "DeltaLoadOneObject",
												"description": "Copy the changed data only from last time via comparing the value in watermark column to identify changes.",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "SetWatermarkValueQuoteChar",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{json(item().SourceObjectSettings).entityName}"
													},
													{
														"name": "Destination",
														"value": "@{json(item().SinkObjectSettings).container}/@{json(item().SinkObjectSettings).folderPath}/@{json(item().SinkObjectSettings).fileName}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "CommonDataServiceForAppsSource",
														"query": {
															"value": "select * from @{json(item().SourceObjectSettings).entityName}\n                    where @{json(item().DataLoadingBehaviorSettings).watermarkColumnName}\n                    > @{variables('WatermarkValueQuoteChar')}@{json(item().DataLoadingBehaviorSettings).watermarkColumnStartValue}@{variables('WatermarkValueQuoteChar')}\n                    and @{json(item().DataLoadingBehaviorSettings).watermarkColumnName}\n                    <= @{variables('WatermarkValueQuoteChar')}@{activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue}@{variables('WatermarkValueQuoteChar')}",
															"type": "Expression"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"validateDataConsistency": false,
													"translator": {
														"value": "@json(item().CopyActivitySettings).translator",
														"type": "Expression"
													}
												},
												"inputs": [
													{
														"referenceName": "MetadataDrivenCopyTask_c3b_SourceDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_entityName": {
																"value": "@json(item().SourceObjectSettings).entityName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "MetadataDrivenCopyTask_c3b_DestinationDS",
														"type": "DatasetReference",
														"parameters": {
															"cw_fileName": {
																"value": "@{json(item().SinkObjectSettings).fileName}-@{json(item().DataLoadingBehaviorSettings).watermarkColumnStartValue}-@{activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue}",
																"type": "Expression"
															},
															"cw_folderPath": {
																"value": "@json(item().SinkObjectSettings).folderPath",
																"type": "Expression"
															},
															"cw_container": {
																"value": "@json(item().SinkObjectSettings).container",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "UpdateWatermarkColumnValue",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeltaLoadOneObject",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[Tablas2].[UpdateWatermarkColumnValue_c3b]",
													"storedProcedureParameters": {
														"Id": {
															"value": {
																"value": "@item().Id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"watermarkColumnStartValue": {
															"value": {
																"value": "@activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "MetadataLogs",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "DefaultFullLoadOneObject",
										"description": "Take a full snapshot on this object and copy it to the destination",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "Source",
												"value": "@{json(item().SourceObjectSettings).entityName}"
											},
											{
												"name": "Destination",
												"value": "@{json(item().SinkObjectSettings).container}/@{json(item().SinkObjectSettings).folderPath}/@{json(item().SinkObjectSettings).fileName}"
											}
										],
										"typeProperties": {
											"source": {
												"type": "CommonDataServiceForAppsSource",
												"query": {
													"value": "@json(item().CopySourceSettings).query",
													"type": "Expression"
												}
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"validateDataConsistency": false,
											"translator": {
												"value": "@json(item().CopyActivitySettings).translator",
												"type": "Expression"
											}
										},
										"inputs": [
											{
												"referenceName": "MetadataDrivenCopyTask_c3b_SourceDS",
												"type": "DatasetReference",
												"parameters": {
													"cw_entityName": {
														"value": "@json(item().SourceObjectSettings).entityName",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "MetadataDrivenCopyTask_c3b_DestinationDS",
												"type": "DatasetReference",
												"parameters": {
													"cw_fileName": {
														"value": "@json(item().SinkObjectSettings).fileName",
														"type": "Expression"
													},
													"cw_folderPath": {
														"value": "@json(item().SinkObjectSettings).folderPath",
														"type": "Expression"
													},
													"cw_container": {
														"value": "@json(item().SinkObjectSettings).container",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ObjectsPerGroupToCopy": {
				"type": "Array"
			}
		},
		"variables": {
			"WatermarkValueQuoteChar": {
				"type": "String"
			}
		},
		"folder": {
			"name": "MetadataDrivenCopyTask_c3b_20211022"
		},
		"annotations": [],
		"lastPublishTime": "2021-10-22T13:40:49Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}