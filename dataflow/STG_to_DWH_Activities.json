{
	"name": "STG_to_DWH_Activities",
	"properties": {
		"folder": {
			"name": "2_STG_to_DWH"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_Activities",
						"type": "DatasetReference"
					},
					"name": "STGActivities"
				},
				{
					"dataset": {
						"referenceName": "DWH_Activities",
						"type": "DatasetReference"
					},
					"name": "DWHActivities"
				},
				{
					"dataset": {
						"referenceName": "STG_SystemUsers",
						"type": "DatasetReference"
					},
					"name": "SystemUsers"
				},
				{
					"dataset": {
						"referenceName": "STG_Leads",
						"type": "DatasetReference"
					},
					"name": "Lead"
				},
				{
					"dataset": {
						"referenceName": "STG_Opportunities",
						"type": "DatasetReference"
					},
					"name": "Opportunity"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DWH_Activities",
						"type": "DatasetReference"
					},
					"name": "Actualiza"
				},
				{
					"dataset": {
						"referenceName": "DWH_Activities",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "HASHSTG"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Join3"
				},
				{
					"name": "AlterRow2"
				},
				{
					"name": "Join4"
				},
				{
					"name": "Join5"
				},
				{
					"name": "Join6"
				},
				{
					"name": "DerivedColumn2"
				}
			],
			"script": "source(output(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\tBK_activityid as string,\n\t\townerid as string,\n\t\tregardingid as string,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [dbo].[Activities_STG]\\n  WHERE [modifiedon] >= dateadd(day,datediff(day,0,GETDATE())-1,0)\\n        AND [modifiedon] < dateadd(day,datediff(day,0,GETDATE()),0)',\n\tformat: 'query') ~> STGActivities\nsource(output(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\townerid as integer,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean,\n\t\tregardinglead as integer,\n\t\tregardingopportunity as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DWHActivities\nsource(output(\n\t\tSK_systemuserid as integer,\n\t\tHASHKEY as long,\n\t\tBK_systemuserid as string,\n\t\tfullname as string,\n\t\tparentsystemuserid as string,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SystemUsers\nsource(output(\n\t\tSK_leadid as integer,\n\t\tBK_leadid as string,\n\t\tcreatedon as timestamp,\n\t\townerid as string,\n\t\tleadsource as integer,\n\t\tstatuscode as integer,\n\t\tindustry as integer,\n\t\tmodifiedon as timestamp,\n\t\tcustom_territorioid as string,\n\t\tcustom_productid as string,\n\t\trating as integer,\n\t\temployees as integer,\n\t\trevenue as decimal(19,4),\n\t\tHASHKEY as long\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Lead\nsource(output(\n\t\tSK_opportunityid as integer,\n\t\tHASHKEY as long,\n\t\tBK_opportunityid as string,\n\t\townerid as string,\n\t\tparentaccountid as string,\n\t\torignatingleadid as string,\n\t\tcloseprobability as integer,\n\t\tmodifiedon as timestamp,\n\t\tcreatedon as timestamp,\n\t\tpurchasetimeframe as integer,\n\t\topportunityratingcode as integer,\n\t\tstatus as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Opportunity\nSTGActivities derive(HASHSTG = crc32(512,upper(toString(ownerid)),toString(status),toString(duedate),toString(priority),toString(duration),toString(modifiedon),toString(activitytype))) ~> HASHSTG\nHASHSTG, DWHActivities lookup(STGActivities@SK_activityid == DWHActivities@SK_activityid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isNull(DWHActivities@HASHKEY),\n\tHASHSTG!=DWHActivities@HASHKEY,\n\tdisjoint: false) ~> ConditionalSplit1@(Nuevos, Actualizaciones, Nada)\nConditionalSplit1@Nuevos alterRow(insertIf(true())) ~> AlterRow1\nAlterRow1, SystemUsers join(ConditionalSplit1@Nuevos@ownerid == BK_systemuserid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin3 derive(STGOwner = SK_systemuserid,\n\t\tSTGLead = SK_leadid,\n\t\tSTGOpportunity = SK_opportunityid) ~> DerivedColumn1\nJoin1, Lead join(regardingid == BK_leadid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2, Opportunity join(regardingid == BK_opportunityid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nConditionalSplit1@Actualizaciones alterRow(updateIf(true())) ~> AlterRow2\nAlterRow2, SystemUsers join(ConditionalSplit1@Actualizaciones@ownerid == BK_systemuserid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nJoin4, Lead join(regardingid == BK_leadid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join5\nJoin5, Opportunity join(regardingid == BK_opportunityid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join6\nJoin6 derive(STGOwner = SK_systemuserid,\n\t\tSTGLead = SK_leadid,\n\t\tSTGOpportunity = SK_opportunityid) ~> DerivedColumn2\nDerivedColumn2 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\townerid as integer,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean,\n\t\tregardinglead as integer,\n\t\tregardingopportunity as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['SK_activityid'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSK_activityid = ConditionalSplit1@Actualizaciones@SK_activityid,\n\t\tactivitytype = ConditionalSplit1@Actualizaciones@activitytype,\n\t\tHASHKEY = HASHSTG,\n\t\townerid = ConditionalSplit1@Actualizaciones@ownerid,\n\t\tduration = ConditionalSplit1@Actualizaciones@duration,\n\t\tmodifiedon = ConditionalSplit1@Actualizaciones@modifiedon,\n\t\tpriority = ConditionalSplit1@Actualizaciones@priority,\n\t\tstatus = ConditionalSplit1@Actualizaciones@status,\n\t\tduedate = ConditionalSplit1@Actualizaciones@duedate,\n\t\tdirection = ConditionalSplit1@Actualizaciones@direction,\n\t\tregardinglead = STGLead,\n\t\tregardingopportunity = STGOpportunity\n\t)) ~> Actualiza\nDerivedColumn1 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\townerid as integer,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean,\n\t\tregardinglead as integer,\n\t\tregardingopportunity as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSK_activityid = ConditionalSplit1@Nuevos@SK_activityid,\n\t\tactivitytype = ConditionalSplit1@Nuevos@activitytype,\n\t\tHASHKEY = HASHSTG,\n\t\townerid = STGOwner,\n\t\tduration = ConditionalSplit1@Nuevos@duration,\n\t\tmodifiedon = ConditionalSplit1@Nuevos@modifiedon,\n\t\tpriority = ConditionalSplit1@Nuevos@priority,\n\t\tstatus = ConditionalSplit1@Nuevos@status,\n\t\tduedate = ConditionalSplit1@Nuevos@duedate,\n\t\tdirection = ConditionalSplit1@Nuevos@direction,\n\t\tregardinglead = STGLead,\n\t\tregardingopportunity = STGOpportunity\n\t)) ~> sink1"
		}
	}
}