{
	"name": "RAW_to_STG_2_Appointments_to_Activities",
	"properties": {
		"folder": {
			"name": "1_RAW_to_STG/Acitivities"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_Appointment",
						"type": "DatasetReference"
					},
					"name": "appointments"
				},
				{
					"dataset": {
						"referenceName": "STG_Activities",
						"type": "DatasetReference"
					},
					"name": "Activities"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "STG_Activities",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "STG_Activities",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "AlterRow2"
				}
			],
			"script": "source(output(\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\tBK_activityid as string,\n\t\townerid as string,\n\t\tregardingid as string,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> appointments\nsource(output(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\tBK_activityid as string,\n\t\townerid as string,\n\t\tregardingid as string,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Activities\nDerivedColumn1, Activities lookup(appointments@BK_activityid == Activities@BK_activityid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isNull(Activities@HASHKEY),\n\tHashActividadesAppointment!=Activities@HASHKEY,\n\tdisjoint: false) ~> ConditionalSplit1@(Nuevos, Actualizaciones, Nada)\nappointments derive(HashActividadesAppointment = crc32(512,upper(toString(ownerid)),toString(status),toString(duedate),toString(priority),toString(duration),toString(modifiedon))) ~> DerivedColumn1\nConditionalSplit1@Nuevos alterRow(insertIf(true())) ~> AlterRow1\nConditionalSplit1@Actualizaciones alterRow(updateIf(true())) ~> AlterRow2\nAlterRow1 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\tBK_activityid as string,\n\t\townerid as string,\n\t\tregardingid as string,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tactivitytype = ConditionalSplit1@Nuevos@activitytype,\n\t\tHASHKEY = HashActividadesAppointment,\n\t\tBK_activityid = ConditionalSplit1@Nuevos@BK_activityid,\n\t\townerid = ConditionalSplit1@Nuevos@ownerid,\n\t\tregardingid = ConditionalSplit1@Nuevos@regardingid,\n\t\tduration = ConditionalSplit1@Nuevos@duration,\n\t\tmodifiedon = ConditionalSplit1@Nuevos@modifiedon,\n\t\tpriority = ConditionalSplit1@Nuevos@priority,\n\t\tstatus = ConditionalSplit1@Nuevos@status,\n\t\tduedate = ConditionalSplit1@Nuevos@duedate\n\t)) ~> sink1\nAlterRow2 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\tBK_activityid as string,\n\t\townerid as string,\n\t\tregardingid as string,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['SK_activityid'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSK_activityid,\n\t\tactivitytype = ConditionalSplit1@Actualizaciones@activitytype,\n\t\tHASHKEY = HashActividadesAppointment,\n\t\tBK_activityid = ConditionalSplit1@Actualizaciones@BK_activityid,\n\t\townerid = ConditionalSplit1@Actualizaciones@ownerid,\n\t\tregardingid = ConditionalSplit1@Actualizaciones@regardingid,\n\t\tduration = ConditionalSplit1@Actualizaciones@duration,\n\t\tmodifiedon = ConditionalSplit1@Actualizaciones@modifiedon,\n\t\tpriority = ConditionalSplit1@Actualizaciones@priority,\n\t\tstatus = ConditionalSplit1@Actualizaciones@status,\n\t\tduedate = ConditionalSplit1@Actualizaciones@duedate\n\t)) ~> sink2"
		}
	}
}