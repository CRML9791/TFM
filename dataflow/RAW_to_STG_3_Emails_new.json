{
	"name": "RAW_to_STG_1_Emails_new",
	"properties": {
		"folder": {
			"name": "1_RAW_to_STG/Acitivities"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ParquetEmails",
						"type": "DatasetReference"
					},
					"name": "rawEmails"
				},
				{
					"dataset": {
						"referenceName": "STG_Activities",
						"type": "DatasetReference"
					},
					"name": "Activities"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "STG_Activities",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "STG_Activities",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "AlterRow2"
				}
			],
			"script": "source(output(\n\t\tactivityid as string,\n\t\tstatuscode as integer,\n\t\tsubject as string,\n\t\tscheduledend as timestamp,\n\t\tregardingobjectid as string,\n\t\tactualdurationminutes as integer,\n\t\townerid as string,\n\t\tprioritycode as integer,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> rawEmails\nsource(output(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\tBK_activityid as string,\n\t\townerid as string,\n\t\tregardingid as string,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Activities\nDerivedColumn1, Activities lookup(activityid == BK_activityid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isNull(HASHKEY),\n\tHashActividadesPhone!=HASHKEY,\n\tdisjoint: false) ~> ConditionalSplit1@(Nuevos, Actualizaciones, Nada)\nrawEmails derive(HashActividadesPhone = crc32(512,upper(toString(ownerid)),toString(statuscode),toString(scheduledend),toString(prioritycode),toString(actualdurationminutes),toString(modifiedon)),\n\t\tRawType = 3) ~> DerivedColumn1\nConditionalSplit1@Nuevos alterRow(insertIf(true())) ~> AlterRow1\nConditionalSplit1@Actualizaciones alterRow(updateIf(true())) ~> AlterRow2\nAlterRow1 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\tBK_activityid as string,\n\t\townerid as string,\n\t\tregardingid as string,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tactivitytype = RawType,\n\t\tHASHKEY = HashActividadesPhone,\n\t\tBK_activityid = activityid,\n\t\tregardingid = regardingobjectid,\n\t\tduration = actualdurationminutes,\n\t\tpriority = prioritycode,\n\t\tstatus = statuscode,\n\t\tduedate = scheduledend,\n\t\tdirection = directioncode,\n\t\townerid = ConditionalSplit1@Nuevos@ownerid,\n\t\tmodifiedon = ConditionalSplit1@Nuevos@modifiedon\n\t)) ~> sink1\nAlterRow2 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tSK_activityid as integer,\n\t\tactivitytype as integer,\n\t\tHASHKEY as long,\n\t\tBK_activityid as string,\n\t\townerid as string,\n\t\tregardingid as string,\n\t\tduration as integer,\n\t\tmodifiedon as timestamp,\n\t\tpriority as integer,\n\t\tstatus as integer,\n\t\tduedate as timestamp,\n\t\tdirection as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['SK_activityid'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSK_activityid,\n\t\tactivitytype = RawType,\n\t\tHASHKEY = HashActividadesPhone,\n\t\tBK_activityid = activityid,\n\t\townerid = ConditionalSplit1@Actualizaciones@ownerid,\n\t\tregardingid = regardingobjectid,\n\t\tduration = actualdurationminutes,\n\t\tmodifiedon = ConditionalSplit1@Actualizaciones@modifiedon,\n\t\tpriority = prioritycode,\n\t\tstatus = statuscode,\n\t\tduedate = scheduledend,\n\t\tdirection = directioncode\n\t)) ~> sink2"
		}
	}
}