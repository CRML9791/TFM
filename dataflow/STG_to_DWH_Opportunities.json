{
	"name": "STG_to_DWH_Opportunities",
	"properties": {
		"folder": {
			"name": "2_STG_to_DWH"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_Opportunities",
						"type": "DatasetReference"
					},
					"name": "STG"
				},
				{
					"dataset": {
						"referenceName": "DWH_Opportunities",
						"type": "DatasetReference"
					},
					"name": "DWH"
				},
				{
					"dataset": {
						"referenceName": "STG_SystemUsers",
						"type": "DatasetReference"
					},
					"name": "SystemUsers"
				},
				{
					"dataset": {
						"referenceName": "STG_Accounts",
						"type": "DatasetReference"
					},
					"name": "Accounts"
				},
				{
					"dataset": {
						"referenceName": "STG_Leads",
						"type": "DatasetReference"
					},
					"name": "Leads"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DWH_Opportunities",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DWH_Opportunities",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "DWHHASH"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "AlterRow2"
				},
				{
					"name": "JoinSystemUser"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "JoinAccount"
				},
				{
					"name": "JoinLead"
				}
			],
			"script": "source(output(\n\t\tSK_opportunityid as integer,\n\t\tHASHKEY as long,\n\t\tBK_opportunityid as string,\n\t\townerid as string,\n\t\tparentaccountid as string,\n\t\torignatingleadid as string,\n\t\tcloseprobability as integer,\n\t\tmodifiedon as timestamp,\n\t\tcreatedon as timestamp,\n\t\tpurchasetimeframe as integer,\n\t\topportunityratingcode as integer,\n\t\tstatus as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT *\\n  FROM [dbo].[Opportunities_STG]\\n  WHERE [modifiedon] >= dateadd(day,datediff(day,0,GETDATE())-1,0)\\n        AND [modifiedon] < dateadd(day,datediff(day,0,GETDATE()),0)',\n\tformat: 'query') ~> STG\nsource(output(\n\t\tSK_opportunityid as integer,\n\t\tHASHKEY as long,\n\t\townerid as integer,\n\t\tparentaccountid as integer,\n\t\torignatingleadid as integer,\n\t\tcloseprobability as integer,\n\t\tmodifiedon as timestamp,\n\t\tcreatedon as timestamp,\n\t\tpurchasetimeframe as integer,\n\t\topportunityratingcode as integer,\n\t\tstatus as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DWH\nsource(output(\n\t\tSK_systemuserid as integer,\n\t\tHASHKEY as long,\n\t\tBK_systemuserid as string,\n\t\tfullname as string,\n\t\tparentsystemuserid as string,\n\t\tmodifiedon as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SystemUsers\nsource(output(\n\t\tSK_accountid as integer,\n\t\tHASHKEY as long,\n\t\tBK_accountid as string,\n\t\tname as string,\n\t\townerid as string,\n\t\torignatingleadid as string,\n\t\trenevue as decimal(19,4),\n\t\tnumberofemployees as integer,\n\t\tterritoryid as string,\n\t\tindustrycode as integer,\n\t\tmodifiedon as timestamp,\n\t\tcreatedon as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Accounts\nsource(output(\n\t\tSK_leadid as integer,\n\t\tBK_leadid as string,\n\t\tcreatedon as timestamp,\n\t\townerid as string,\n\t\tleadsource as integer,\n\t\tstatuscode as integer,\n\t\tindustry as integer,\n\t\tmodifiedon as timestamp,\n\t\tcustom_territorioid as string,\n\t\tcustom_productid as string,\n\t\trating as integer,\n\t\temployees as integer,\n\t\trevenue as decimal(19,4),\n\t\tHASHKEY as long\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Leads\nSTG derive(DWHHASH = crc32(512,upper(toString(parentaccountid)),upper(toString(orignatingleadid)),toString(purchasetimeframe),toString(purchasetimeframe),toString(status),toString(opportunityratingcode),upper(toString(ownerid)),toString(modifiedon))) ~> DWHHASH\nDWHHASH, DWH lookup(STG@SK_opportunityid == DWH@SK_opportunityid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isNull(DWH@HASHKEY),\n\tDWH@HASHKEY!=STG@HASHKEY,\n\tdisjoint: false) ~> ConditionalSplit1@(Nuevos, Actualizaciones, Nada)\nConditionalSplit1@Nuevos alterRow(insertIf(true())) ~> AlterRow1\nConditionalSplit1@Actualizaciones alterRow(updateIf(true())) ~> AlterRow2\nAlterRow1, SystemUsers join(ConditionalSplit1@Nuevos@ownerid == BK_systemuserid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSystemUser\nJoinLead derive(STGUser = SK_systemuserid,\n\t\tSTGAccount = SK_accountid,\n\t\tSTGLead = SK_leadid) ~> DerivedColumn1\nJoinSystemUser, Accounts join(ConditionalSplit1@Nuevos@parentaccountid == BK_accountid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinAccount\nJoinAccount, Leads join(ConditionalSplit1@Nuevos@orignatingleadid == BK_leadid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLead\nDerivedColumn1 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tSK_opportunityid as integer,\n\t\tHASHKEY as long,\n\t\townerid as integer,\n\t\tparentaccountid as integer,\n\t\torignatingleadid as integer,\n\t\tcloseprobability as integer,\n\t\tmodifiedon as timestamp,\n\t\tcreatedon as timestamp,\n\t\tpurchasetimeframe as integer,\n\t\topportunityratingcode as integer,\n\t\tstatus as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tHASHKEY = DWHHASH,\n\t\townerid = STGUser,\n\t\tparentaccountid = STGAccount,\n\t\torignatingleadid = STGLead,\n\t\tcloseprobability = ConditionalSplit1@Nuevos@closeprobability,\n\t\tmodifiedon = ConditionalSplit1@Nuevos@modifiedon,\n\t\tcreatedon = ConditionalSplit1@Nuevos@createdon,\n\t\tpurchasetimeframe = ConditionalSplit1@Nuevos@purchasetimeframe,\n\t\topportunityratingcode = ConditionalSplit1@Nuevos@opportunityratingcode,\n\t\tstatus = ConditionalSplit1@Nuevos@status,\n\t\tSK_opportunityid = ConditionalSplit1@Nuevos@SK_opportunityid\n\t)) ~> sink1\nAlterRow2 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tSK_opportunityid as integer,\n\t\tHASHKEY as long,\n\t\townerid as integer,\n\t\tparentaccountid as integer,\n\t\torignatingleadid as integer,\n\t\tcloseprobability as integer,\n\t\tmodifiedon as timestamp,\n\t\tcreatedon as timestamp,\n\t\tpurchasetimeframe as integer,\n\t\topportunityratingcode as integer,\n\t\tstatus as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['SK_opportunityid'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2"
		}
	}
}